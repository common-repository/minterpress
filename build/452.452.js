"use strict";(self.webpackChunkminterpress=self.webpackChunkminterpress||[]).push([[452],{452:(e,t,r)=>{r.r(t),r.d(t,{default:()=>i});class i{constructor(e){this.el=e,this.init()}generateString(e,t){t.value?e.innerHTML=t.value:e.innerHTML="Not provided"}generateArray(e,t){if(t.value){const r=t.value.replace(/,/g,", ");e.innerHTML=r}else e.innerHTML="Not provided"}generateImage(e,t){const r=t.querySelector("img")||null;if(r){const t=r.getAttribute("src");e.setAttribute("src",t)}else console.warn("Did not provide an image... Check this on the server!")}updateUI(){this.containers.forEach((e=>{const t=e.dataset.inputCopyType,r=e.querySelector("[data-input-copy-id]"),i=r.dataset.inputCopyId,n=document.getElementById(i);switch(t){case"string":this.generateString(r,n);break;case"array":this.generateArray(r,n);break;default:r.innerHTML="Not provided",console.log("provide a valid type")}}))}setVars(){this.containers=this.el.querySelectorAll("[data-input-copy-type]"),this.trigger=this.el.querySelector("[data-input-copy='trigger']")}bindEvents(){this.trigger.addEventListener("click",(()=>this.updateUI()))}init(){this.setVars(),this.bindEvents()}}}}]);